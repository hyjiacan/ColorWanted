<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAEACAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAAAAAABMLAAATCwAAAAEAAAAA
        AAAAAAAAAQEBAAICAgADAwMABAQEAAUFBQAGBgYABwcHAAgICAAJCQkACgoKAAsLCwAMDAwADQ0NAA4O
        DgAPDw8AEBAQABEREQASEhIAExMTABQUFAAVFRUAFhYWABcXFwAYGBgAGRkZABoaGgAbGxsAHR0dAB4e
        HgAfHx8AICAgACEhIQAiIiIAIyMjACQkJAAlJSUAJiYmACcnJwAoKCgAKSkpACoqKgArKysALCwsAC0t
        LQAuLi4ALy8vADAwMAAxMTEAMjIyADMzMwA1NTUANjY2ADc3NwA4ODgAOTk5ADo6OgA7OzsAPDw8AD09
        PQA+Pj4APz8/AEBAQABBQUEAQkJCAENDQwBEREQARUVFAEZGRgBHR0cASEhIAEtLSwBMTEwATU1NAE5O
        TgBPT08AUVFRAFJSUgBTU1MAVFRUAFVVVQBXV1cAWFhYAFlZWQBaWloAW1tbAFxcXABdXV0AXl5eAF9f
        XwBgYGAAYWFhAGJiYgBjY2MAZGRkAGVlZQBmZmYAZ2dnAGhoaABpaWkAampqAGtrawBsbGwAbW1tAG5u
        bgBvb28AcHBwAHFxcQBycnIAc3NzAHR0dAB1dXUAdnZ2AHd3dwB4eHgAeXl5AHp6egB7e3sAfHx8AH19
        fQB+fn4Af39/AICAgACBgYEAgoKCAIODgwCEhIQAhoaGAIeHhwCIiIgAiYmJAIuLiwCMjIwAjY2NAI6O
        jgCPj48AkJCQAJGRkQCSkpIAk5OTAJSUlACVlZUAlpaWAJeXlwCYmJgAmZmZAJqamgCbm5sAnJycAJ2d
        nQCenp4An5+fAKCgoAChoaEAoqKiAKSkpAClpaUApqamAKioqACpqakAqqqqAKurqwCsrKwAra2tAK6u
        rgCvr68AsbGxALKysgCzs7MAtLS0ALW1tQC2trYAt7e3ALi4uAC5ubkAurq6ALu7uwC9vb0Avr6+AL+/
        vwDAwMAAwcHBAMLCwgDDw8MAxMTEAMXFxQDGxsYAx8fHAMjIyADJyckAysrKAMvLywDNzc0Azs7OAM/P
        zwDQ0NAA0dHRANLS0gDT09MA1NTUANXV1QDW1tYA19fXANjY2ADZ2dkA2traANvb2wDc3NwA3d3dAN7e
        3gDf398A4ODgAOHh4QDi4uIA4+PjAOTk5ADl5eUA5ubmAOfn5wDo6OgA6enpAOrq6gDr6+sA7OzsAO3t
        7QDu7u4A7+/vAPDw8ADx8fEA8vLyAPPz8wD09PQA9fX1APb29gD39/cA+Pj4APn5+QD6+voA+/v7APz8
        /AD9/f0A/v7+AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy
        8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy
        8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy
        8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw7fDs8O3y
        8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8fLr
        8Onx8PLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy
        8vLs8O3s8PHy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy
        8vLy8vLx8Ozv8O/x8PLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy
        8vLy8vLy8vLy8PDs8Xbv8fHy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8fDy8vLy8vLy8e/x
        7+/s8fHw8fDw8vLw8O/v6+yrZO/x8e/x8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vHy8vLy8vLy
        8vLy8vLv8fHy8vLy8vLy8vLy8unFs+Ls8vLt8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy
        8vDx8PDw7e/u8evy8vLy8vLy8vLy7/LstSmk6e/v8PHx8PLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy
        8vLy8vHx8e/v7+zq7+3w8fDx8fDw8fHx8PDy8s1LDV3w7+3y8PHx8vLy8vLy8vLy8vLy8vLy8vLy8vLy
        8vLy8vLy8vHx8O/t7OyPt+zu7Ozu7u3t7u/v7+/lpYqZNgMH6fHq7vDx8PLy8vLy8vLy8vLy8vLy8vLy
        8vLy8vLy8vLy8vLy8fDs7uetA1Tr7+3v6+/v6u7x7e/x2lqZUBYCAnrp8Ojs8vHt7/Dw8vHw8vLy8vLy
        8vLy8vLy8vLy8vLy8vLy8vDt7unpcwWt8Lng7+nv7Ozs7O3w6+OdQxw0AwEF0e/l7/Lu8fHw8vLv8fLy
        8vLy8vLy8vLy8vLy8vLy8vLy8vLw8e/s8aEKHs1Ma87plb7dnu3u7/DWWEQAMAABAtDo7+/t8u/u8vDw
        8vLx8PLy8vLy8vLy8vLy8vLy8vLy8vLy8fLv4+d1kAIFAnIPgvBdJbTy8PHr75IABgIDAADQ7PLw8ezt
        8fLx7/Lt8fHy8vLy8vLy8vLy8vLy8vLy8vLy8vDr7+3vdAACAgIFSB6dviS25uygnZlYGQAAAQIBzu7u
        8PHv257k8u/v7+/w8vLy8vLy8vLy8vLx8fLy8vLy8vLy8u/r7nIAAgAAAgJkB5Dw7O7ew0vUlQAAAAMB
        Ac7p8u7x5+xdifLv7+7w8PLy8vLy8vLy8vLy8PLy8vLy8vLy8u/v6epyAgIDAgEGD10kou3xu1cgGiQB
        AgEDTQbI6u7t7u3u6oyU7/Lr8fHy8vLy8vLy8vLy8vLy8vLy8vLy8vLm6/HqggEAAAEGfepCsPDp42La
        GQYDAQQCAhGE0efw5ubv7vHr8u/r8O/x8PLy8vLy8vLy8vLy8vLy8PDw8fLy6fDo7oYCOQMFABPA7+ro
        7u/r7+ypAgADARjaAMzp7+7s5vHt7PLv5uzv7/Hy8vLy8vLy8vLy8vLy8PHs7O3t7/Hs7+52B+wHARUK
        i+vv7+7t7/Hx658JBAIDogOc7ebu7u2lDnjm6PDt7+/w8vLy8vLy8vLy8vLy8vDx6e/v7O/v6e7vdAbp
        CAAeu8fp7+3s7vLx8O/xqgMDBKUBAt3s6zUUb2hE7+7p7e/v8PLy8vLy8vLy8vLy8vLw8e/v6e7s5+7s
        yAYz6tsSBqLi8urs7u/y8vLy7OutDAJfAAJC7+/XGgcHX+zu7Oru7/Ly8vLy8vLy8vLy8vLy8fHr6fDy
        5vLs8McD7OfpDgjk7+jt8u/w8vLy8uzq8jABfgICOfLpNFgcAAWDPmPt7e/x8vLy8vLy8vLy8vLy8vHw
        8O+Gme7s6+3IBOzs5zBJ5e3v7u7u8PLy8vHv7sgTCsWEAzfs6x0HCBQeBjsmq+7u8PLy8vLy8vLy8vLy
        8vLw8e/v5Lzx8ubvvS/y7DEB0O/u7fLy8fLy8vLy8ujxnBTvngA56OYhAwZdUjJKS9ns7fHy8vLy8vLy
        8vLy8vLy8PDv8vDw7+3w4ho97O/ImeTu7/Lx8PHy8vLx8ebt7Y7W7+IIN/Lw0lSo3NnWWkjr7O/w8vHy
        8vLy8vLy8vLy8vLy8fLy8O/t6aYOqvGOL97v7PDy8vLy8vLy8fHr7eOfU+TslT/w7PDm7evu59a27ezv
        8vLx8vLy8vLy8vLy8vLy8vDy8vDv8dY4Vuvs5lKn5u/x8vLy8vLy8vDv8efv7tbs7utB8e/u6erv6u/r
        7+zt7/Ly8PLy8vLy8vLy8vLy8vLy8vDx8e+VBMfr7+zxvfHt8fLy8vLy8vLw7+/r7rUyNO/tZsrp8e/u
        8Y7q6/Hr7+/y8vLy8vLy8vLy8vLy8vLy8vHv7+/xHRfd7vLu8Ovx7/Hy8vLy8vLy8PHt6+8rAAJ55nxI
        4fLt8OXy7u/x7PHx8vLy8vLy8vLy8vLy8vLy8vDv7O/s2hcv46rv7Ons5+/x8vDw8vLy8vDx7OztRQEA
        C515AtPv7unx7uzx8vHx8PLy8vLy8vLy8vLy8vLy8vLw7u/y7JUAL2UEdO3q6e/v8vLw8fLy8vLx8O/s
        yWAAAwIDNwKU7Ozw5O/y7O3y8vLy8vLy8vLy8vLy8vLy8vLy7/Hv7uFoBAtREQOS6Ovr7/Hy8fLw8vLw
        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
        8vLy8vLy8vLy8vLy8vLy8vLx8O/v6/Hx7fHs8erw7+fx6+/s7+js7evs7+/t8fLy8vLy8vLy8vLy8vLy
        8vLy8vLy8vLy8vLy8vLy8vLy8vLy8fDt7evou4SDweXv6uvt5+zu6+/s6unu8OTw7/Hy8vLy8vLy8vLy
        8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>